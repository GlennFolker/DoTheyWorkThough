apply plugin: 'java-library'

sourceSets.main.java.srcDirs = ['src/']

repositories{
    mavenCentral()
    maven{url 'https://oss.sonatype.org/content/repositories/snapshots/'}
    maven{url 'https://oss.sonatype.org/content/repositories/releases/'}
    maven{url 'https://jitpack.io'}
}

dependencies{
    api "com.github.Anuken.Arc:arc-core:$arcVersion"
    implementation "com.github.Anuken.Arc:natives-desktop:$arcVersion"
    implementation "com.github.Anuken.Arc:backend-sdl:$arcVersion"
}

sourceCompatibility = 17
targetCompatibility = 17

def mainClassName = 'work.Though'

task run(type: JavaExec, dependsOn: [classes, configurations.runtimeClasspath]){
    mainClass = mainClassName
    classpath = sourceSets.main.runtimeClasspath
    standardInput = System.in
    workingDir = file("$rootDir/out")
    ignoreExitValue = true

    doFirst{
        file("$rootDir/out").mkdirs()
    }
}

task dist(type: Jar, dependsOn: [configurations.runtimeClasspath]){
    archiveFileName = "${appName}.jar"

    from files(sourceSets.main.output.classesDirs)
    from files(sourceSets.main.output.resourcesDir)
    from configurations.runtimeClasspath.collect{it.isDirectory() ? it : zipTree(it)}

    duplicatesStrategy = DuplicatesStrategy.EXCLUDE
    manifest{
        attributes 'Main-Class': mainClassName
    }
}
